<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.7.5</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<groupId>com.example</groupId>
	<artifactId>system</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>pom</packaging>

	<name>system</name>
	<description>system</description>

	<modules>
		<module>system-common</module>
		<module>system-mbg</module>
		<module>system-security</module>
		<module>system-admin</module>
<!--		<module>system-search</module>-->
	</modules>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<skipTests>true</skipTests><!--当使用spring-boot-maven-plugin打包时，会自动执行test单元测试，设为true取消执行test-->
		<docker.host>http://192.168.3.101:2375</docker.host><!--远程docker地址-->
		<docker.maven.plugin.version>0.40.2</docker.maven.plugin.version><!--docker打包插件-->
		<pagehelper-starter.version>1.4.5</pagehelper-starter.version><!--分页插件-->
		<druid.version>1.2.14</druid.version><!--数据库驱动-->
		<hutool.version>5.8.9</hutool.version><!--hutool工具包-->
		<springfox-swagger.version>3.0.0</springfox-swagger.version><!--swagger-->
		<knife4j.version>3.0.0</knife4j.version><!--swagger增强-->
		<mybatis-generator.version>1.3.7</mybatis-generator.version><!--mybatis代码生成器-->
		<mybatis.version>3.5.10</mybatis.version><!--mybatis-->
		<mysql-connector.version>8.0.29</mysql-connector.version><!--mysql连接池-->
		<jjwt.version>0.9.1</jjwt.version><!--jwt-->
		<hibernate.version>6.1.5.Final</hibernate.version><!--参数校验-->
		<jaxb-api.version>2.3.1</jaxb-api.version><!--解决java11不兼容的问题-->
		<fastjson.version>2.0.28</fastjson.version><!--alibaba Json解析-->
	</properties>

	<dependencyManagement>
		<dependencies>
			<!--通用模块-->
			<dependency>
				<groupId>com.example</groupId>
				<artifactId>system-common</artifactId>
				<version>1.0-SNAPSHOT</version>
			</dependency>
			<!--MBG生成模块-->
			<dependency>
				<groupId>com.example</groupId>
				<artifactId>system-mbg</artifactId>
				<version>1.0-SNAPSHOT</version>
			</dependency>
			<!--安全模块-->
			<dependency>
				<groupId>com.example</groupId>
				<artifactId>system-security</artifactId>
				<version>1.0-SNAPSHOT</version>
			</dependency>
			<!--用户管理模块-->
			<dependency>
				<groupId>com.example</groupId>
				<artifactId>system-admin</artifactId>
				<version>1.0-SNAPSHOT</version>
			</dependency>
			<!--搜索模块-->
<!--			<dependency>-->
<!--				<groupId>com.example</groupId>-->
<!--				<artifactId>system-search</artifactId>-->
<!--				<version>1.0-SNAPSHOT</version>-->
<!--			</dependency>-->
			<!--MyBatis分页插件starter-->
			<dependency>
				<groupId>com.github.pagehelper</groupId>
				<artifactId>pagehelper-spring-boot-starter</artifactId>
				<version>${pagehelper-starter.version}</version>
			</dependency>
			<!--集成druid连接池-->
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>druid-spring-boot-starter</artifactId>
				<version>${druid.version}</version>
			</dependency>
			<!--Swagger-UI API文档生产工具-->
			<dependency>
				<groupId>io.springfox</groupId>
				<artifactId>springfox-boot-starter</artifactId>
				<version>${springfox-swagger.version}</version>
			</dependency>
			<!--Swagger增强-->
			<dependency>
				<groupId>com.github.xiaoymin</groupId>
				<artifactId>knife4j</artifactId>
				<version>${knife4j.version}</version>
			</dependency>
			<!-- MyBatis-->
			<dependency>
				<groupId>org.mybatis</groupId>
				<artifactId>mybatis</artifactId>
				<version>${mybatis.version}</version>
			</dependency>
			<!-- MyBatis 代码生成器 -->
			<dependency>
				<groupId>org.mybatis.generator</groupId>
				<artifactId>mybatis-generator-core</artifactId>
				<version>${mybatis-generator.version}</version>
			</dependency>
			<!--Mysql数据库驱动-->
			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>${mysql-connector.version}</version>
			</dependency>
			<!--JWT(Json Web Token)登录支持-->
			<dependency>
				<groupId>io.jsonwebtoken</groupId>
				<artifactId>jjwt</artifactId>
				<version>${jjwt.version}</version>
			</dependency>
			<!--Hutool Java工具包-->
			<dependency>
				<groupId>cn.hutool</groupId>
				<artifactId>hutool-all</artifactId>
				<version>${hutool.version}</version>
			</dependency>
			<!--参数校验-->
			<dependency>
				<groupId>org.hibernate.validator</groupId>
				<artifactId>hibernate-validator</artifactId>
				<version>${hibernate.version}</version>
			</dependency>
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>fastjson</artifactId>
				<version>${fastjson.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
		</dependency>
		<!--lombok代码功能增强，通过注解省略get、set等方法，以及一些其他功能注解的使用-->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<!--使用maven创建docker镜像-->
<!--			<plugin>-->
<!--				<groupId>io.fabric8</groupId>-->
<!--				<artifactId>docker-maven-plugin</artifactId>-->
<!--				<version>${docker.maven.plugin.version}</version>-->
<!--				<executions>-->
<!--					&lt;!&ndash;如果想在项目打包时构建镜像添加&ndash;&gt;-->
<!--					<execution>-->
<!--						<id>build-image</id>-->
<!--						<phase>package</phase>-->
<!--						<goals>-->
<!--							<goal>build</goal>-->
<!--						</goals>-->
<!--					</execution>-->
<!--				</executions>-->
<!--				<configuration>-->
<!--					&lt;!&ndash; Docker 远程管理地址&ndash;&gt;-->
<!--					<dockerHost>${docker.host}</dockerHost>-->
<!--					<images>-->
<!--						<image>-->
<!--							&lt;!&ndash;定义镜像名称&ndash;&gt;-->
<!--							<name>system/${project.name}:${project.version}</name>-->
<!--							&lt;!&ndash;定义镜像构建行为&ndash;&gt;-->
<!--							<build>-->
<!--								&lt;!&ndash;定义基础镜像&ndash;&gt;-->
<!--								<from>openjdk:8</from>-->
<!--								<args>-->
<!--									<JAR_FILE>${project.build.finalName}.jar</JAR_FILE>-->
<!--								</args>-->
<!--								&lt;!&ndash;定义哪些文件拷贝到容器中&ndash;&gt;-->
<!--								<assembly>-->
<!--									&lt;!&ndash;定义拷贝到容器的目录&ndash;&gt;-->
<!--									<targetDir>/</targetDir>-->
<!--									&lt;!&ndash;只拷贝生成的jar包&ndash;&gt;-->
<!--									<descriptorRef>artifact</descriptorRef>-->
<!--								</assembly>-->
<!--								&lt;!&ndash;定义容器启动命令&ndash;&gt;-->
<!--								<entryPoint>["java", "-jar","-Dspring.profiles.active=prod","/${project.build.finalName}.jar"]</entryPoint>-->
<!--								&lt;!&ndash;定义维护者&ndash;&gt;-->
<!--								<maintainer>zhangwenke</maintainer>-->
<!--							</build>-->
<!--						</image>-->
<!--					</images>-->
<!--				</configuration>-->
<!--			</plugin>-->
		</plugins>
	</build>

</project>
